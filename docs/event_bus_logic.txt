All events and actions must be logged in the high level logger

on_wake
- same as on boot

on_sleep
- un-register
- un-publish
- un-subscribe

on_network_change
- same as on_sleep
- same as on_boot 

on_ambient_light_change
- update pidf
- publish pidf

on_gps_location_change
- update pidf
- publish pidf

on_ambient_noise_change
- update pidf
- publish pidf

on_accelerometer_change
- update pidf
- publish pidf
 
on_incomming_invite
- alert user

on_incomming_notify
- for watcher info event
  update watcher info state
  cache watcher info 
  merge watcher info with pres-rules state
  prompt user for allow/deny pending watchers
  each watcher can be added to the pres rules and to own buddy list (tipically when the watcher is allowed)
- for presence event
  update buddy state
  cache buddy state
  if uri is our own and another instance generated it, display offline state
  and stop send publish until user set manualy state to online
- for mwi event
  update mwi state
  cache mwi state
- for xcap-diff
  get xcap document
  rebuild state associated with xcap document
         
on_incomming_message
- alert use with message composition state

on_incomming refer
- if refer to conference prompt user for connecting to the conference room
 
on_register

on_bonjour_updates
- update bonjour neigbour list
- dump bonjour list

on_boot
- purge state folders
- lookup stun servers
- detect nat type
- lookup sip registrar
- register
- create bonjour state
- broadcast own bonjour state
- get enviroment state (light, noise, gps)
- lookup xcap server
- get xcap pidf-manipulation
- build pidf, if pidf-manipulation is set, use that one as current state otherwise go online
- publish pidf
- get xcap pres-rules document
- build pres-rules state
- get xcap resource-lists document
- build buddy list state
- get xcap rls-services document
- build subscription buddy list state
- create pidf state for each budy
- subscribe to buddy list presence event
- cache xcap documents
- create watcher info state
- subscribe to watcher info event
- subscribe to xcap-diff event
- create message waiting indicator state
- subscribe to message waiting indicator event

on_shutdown
- un-register
- un-publish
- un-subscribe
- backup xcap documents

on_buddy_add
- save resource-lists remote
- save resource-list local
- subscribe to buddy

on_buddy_delete
- save resource-lists remote
- save resource-lists local
- un-subscribe to buddy

on_buddy_update
- save resource-lists remote
- save resource-lists local

on_outgoing_invite

on_change_presence_state
- update pidf
- publish pidf
- if persistent away
	- build pidf-manipulation document
	- save pidf-manipulation remote	  
	- save pidf-manipulation local

on_change_policy
- save pres-rules remote
- save pres-rules local

on_timer
- sip keepalive
- set device state to idle on non keybord activity

 