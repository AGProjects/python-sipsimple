
Debian installation
-------------------

For Debian testing or unstable on an i386 architecture there is an official
public repository provided by AG Projects. 

Install the AG Projects debian software signing key:

wget http://download.ag-projects.com/agp-debian-gpg.key 
sudo apt-key add agp-debian-gpg.key

Add these lines at the end of etc/apt/sources.list

# AG Projects software
deb http://ag-projects.com/debian unstable main
deb-src http://ag-projects.com/debian unstable main

Then install the software:

sudo apt-get update
sudo apt-get install sipclient


Building from sources
---------------------

The installation procedure includes 4 steps described below:

Step 1. Install dependencies
Step 2. Compile PJSIP C library
Step 3. Build the Python library
Step 4. Install the library system wide


Step 1. Install dependencies


For Linux Debian (unstable or testing)
--------------------------------------

apt-get install subversion python-dnspython python-setuptools python-lxml \
cython python-application python-twisted


For other distributions
-----------------------

Use the appropriate package manager and install the same packages. Some
Linux distributions might not have up to date versions of all required
packages. To install the latest versions of the python components use the
easy_install script provided in python-setuptools package. For example to
install the latest versions of dnspython and cython on Ubuntu OS use:

sudo easy_install dnspython
sudo easy_install cython


For Nokia Internet tablet N810 
-----------------------------

Install the diablo sdk and debfarm catalogues referenced from:

http://www.gronmayer.com/it/index.php

apt-get install libc6-dev subversion python2.5-cython python2.5-setuptools
python2.5-libxml2 libxslt1-dev zlib1g-dev flash-and-reboot initfs-flasher
kernel-diablo-flasher libasound2-dev

easy_install dnspython
easy_install python-application
easy_install twisted
easy_install lxml

Install the python-xcaplib library from:
http://download.ag-projects.com/OpenXCAP/clients/


Step 2. Compile PJSIP C library

Check out the PJSIP project in the pypjua main directory:

svn co http://svn.pjsip.org/repos/pjproject/trunk pjsip

Go to the PJSIP directory and compile it (after changing the UDP message limit to 64K):

cd pjsip
grep  PJSIP_MAX_PKT_LEN pjlib/include/pj/config_site.h >/dev/null || echo '#define PJSIP_MAX_PKT_LEN 65536' >>pjlib/include/pj/config_site.h
make distclean
./configure
make

Note that, on some platforms like amd64 you may need to supply -fPIC flag to
the compiler, otherwise although the compilation will succeed, later attempt
to use the library will not. 

make distclean
make HOST_CFLAGS=-fPIC


Step 3. Build the Python library
--------------------------------

Go to the main pypjua directory and build the library by running:

sh ./build_inplace


Step 4. Install the library system wide
---------------------------------------

To install the library and the command line tools system wide:

sudo python setup.py install

The command line tools are installed in the system executable path and
starting with sip_.


Building the Debian package
---------------------------

You need the following packages before trying to build a debian package:

apt-get install subversion python-dnspython python-setuptools python-lxml \
cython python-application python-twisted build-essential libasound2-dev \
python-setuptools cdbs debhelper python-all-dev python-support cython

Check out the PJSIP project from the pypjua main directory:

svn co http://svn.pjsip.org/repos/pjproject/trunk pjsip

Go to the PJSIP directory and compile it:

cd pjsip
make distclean
./configure
make

Note that, on some platforms (as seen on amd64) you may need to supply -fPIC
flag to compiler, otherwise although the compilation will succeed, later
attempts to use the library will not.
make distclean

make HOST_CFLAGS=-fPIC

Go back to the software root directory and make a source distribution
tarball:

debuild clean
python setup.py sdist

Go to the dist directory and untar the tarball just created:

cd dist
tar xvzf *.tar.gz

Change to the distribution directory and:

ln -s ../../pjsip pjsip
./build_inplace
dpkg-buildpackage

You will now have a Debian package in the upper level directory.


Notes
-----

- For testing the library see README.txt in the scripts directory
- The unix user must belong to the 'audio' group
- OSS drivers are not supported. You must use ALSA drivers.

