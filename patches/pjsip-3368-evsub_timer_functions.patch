--- pjsip/include/pjsip-simple/evsub.h	2008-12-23 18:27:53.000000000 +0100
+++ pjsip/include/pjsip-simple/evsub.h	2013-01-24 18:29:39.000000000 +0100
@@ -482,6 +482,14 @@
 PJ_DECL(void*) pjsip_evsub_get_mod_data( pjsip_evsub *sub, unsigned mod_id );
 
 
+/* Update evbsub internal refresh_time with the given interval */
+PJ_DECL(void) pjsip_evsub_update_expires( pjsip_evsub *sub, pj_uint32_t interval );
+
+
+/* Set the specified timer (UAC or UAS) to the specified time */
+PJ_DECL(void) pjsip_evsub_set_timer( pjsip_evsub *sub, int timer_id,
+		                    pj_int32_t seconds );
+
 
 PJ_END_DECL
 
--- pjsip/src/pjsip-simple/evsub.c	2008-12-23 18:27:53.000000000 +0100
+++ pjsip/src/pjsip-simple/evsub.c	2013-01-24 18:31:04.000000000 +0100
@@ -153,7 +153,7 @@
 {
     "None",
     "UAC_REFRESH",
-    "UAS_TIMEOUT"
+    "UAS_TIMEOUT",
     "UAC_TERMINATE",
     "UAC_WAIT_NOTIFY",
     "INVALID_TIMER"
@@ -485,6 +485,11 @@
     sub->refresh_time.sec += interval;
 }
 
+PJ_DEF(void) pjsip_evsub_update_expires( pjsip_evsub *sub, pj_uint32_t interval )
+{
+    update_expires(sub, interval);
+}
+
 
 /* 
  * Schedule timer.
@@ -518,6 +523,12 @@
     }
 }
 
+PJ_DEF(void) pjsip_evsub_set_timer( pjsip_evsub *sub, int timer_id,
+		       pj_int32_t seconds)
+{
+    set_timer(sub, timer_id, seconds);
+}
+
 
 /*
  * Destroy session.
