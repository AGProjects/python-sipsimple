Index: pjnath/src/pjnath/ice_session.c
===================================================================
--- pjnath/src/pjnath/ice_session.c	(revisión: 3100)
+++ pjnath/src/pjnath/ice_session.c	(copia de trabajo)
@@ -69,7 +69,7 @@
 /* Candidate type preference */
 static pj_uint8_t cand_type_prefs[4] =
 {
-#if PJ_ICE_CAND_TYPE_PREF_BITS < 8
+#if 0
     /* Keep it to 2 bits */
     3,	    /**< PJ_ICE_HOST_PREF	*/
     1,	    /**< PJ_ICE_SRFLX_PREF.	*/
@@ -225,7 +225,7 @@
 				    pj_ice_cand_type type,
 				    const pj_sockaddr *base_addr)
 {
-#if 0
+
     char buf[64];
     pj_uint32_t val;
 
@@ -238,7 +238,7 @@
     pj_ansi_snprintf(buf, sizeof(buf), "%c%x",
 		     get_type_prefix(type), val);
     pj_strdup2(pool, foundation, buf);
-#else
+#if 0
     /* Much shorter version, valid for candidates added by
      * pj_ice_strans.
      */
@@ -476,7 +476,6 @@
     ice->prefs = (pj_uint8_t*) pj_pool_calloc(ice->pool, PJ_ARRAY_SIZE(prefs),
 					      sizeof(pj_uint8_t));
     for (i=0; i<4; ++i) {
-	pj_assert(prefs[i] < (2 << PJ_ICE_CAND_TYPE_PREF_BITS));
 	ice->prefs[i] = prefs[i];
     }
     return PJ_SUCCESS;
@@ -603,11 +602,10 @@
 				  pj_uint32_t local_pref,
 				  pj_uint32_t comp_id)
 {
-#if 0
     return ((ice->prefs[type] & 0xFF) << 24) + 
 	   ((local_pref & 0xFFFF)    << 8) +
 	   (((256 - comp_id) & 0xFF) << 0);
-#else
+#if 0
     enum {
 	type_mask   = ((2 << PJ_ICE_CAND_TYPE_PREF_BITS) - 1),
 	local_mask  = ((2 << PJ_ICE_LOCAL_PREF_BITS) - 1),
@@ -1472,7 +1470,7 @@
     msg_data->data.req.ckid = check_id;
 
     /* Add PRIORITY */
-    prio = CALC_CAND_PRIO(ice, PJ_ICE_CAND_TYPE_PRFLX, 0, 
+    prio = CALC_CAND_PRIO(ice, PJ_ICE_CAND_TYPE_PRFLX, 65535, 
 			  lcand->comp_id);
     pj_stun_msg_add_uint_attr(check->tdata->pool, check->tdata->msg, 
 			      PJ_STUN_ATTR_PRIORITY, prio);
Index: pjnath/src/pjnath/ice_strans.c
===================================================================
--- pjnath/src/pjnath/ice_strans.c	(revisión: 3100)
+++ pjnath/src/pjnath/ice_strans.c	(copia de trabajo)
@@ -52,18 +52,17 @@
  * we don't have the facility to specify that, we'll just set it
  * all to zero.
  */
-#define SRFLX_PREF  0
-#define HOST_PREF   0
-#define RELAY_PREF  0
+#define SRFLX_PREF  65535
+#define HOST_PREF   65535
+#define RELAY_PREF  65535
 
 /* The candidate type preference when STUN candidate is used */
 static pj_uint8_t srflx_pref_table[4] = 
 {
-    /* Keep it to 2 bits */
-    1,	/**< PJ_ICE_HOST_PREF	    */
-    2,	/**< PJ_ICE_SRFLX_PREF	    */
-    3,	/**< PJ_ICE_PRFLX_PREF	    */
-    0	/**< PJ_ICE_RELAYED_PREF    */
+    126,    /**< PJ_ICE_HOST_PREF	    */
+    100,    /**< PJ_ICE_SRFLX_PREF	    */
+    110,    /**< PJ_ICE_PRFLX_PREF	    */
+    0	    /**< PJ_ICE_RELAYED_PREF    */
 };
 
 
