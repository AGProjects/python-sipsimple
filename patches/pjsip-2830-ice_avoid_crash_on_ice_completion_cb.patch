--- pjnath/src/pjnath/ice_session.c.bak	2010-02-25 09:58:54.000000000 +0100
+++ pjnath/src/pjnath/ice_session.c	2010-02-25 10:00:55.000000000 +0100
@@ -1120,6 +1120,7 @@
 {
     pj_ice_sess *ice = (pj_ice_sess*) te->user_data;
     enum timer_type type = (enum timer_type)te->id;
+    pj_bool_t has_mutex = PJ_TRUE;
 
     PJ_UNUSED_ARG(th);
 
@@ -1135,8 +1136,20 @@
 	on_ice_complete(ice, PJNATH_EICENOMTIMEOUT);
 	break;
     case TIMER_COMPLETION_CALLBACK:
-	if (ice->cb.on_ice_complete)
-	    (*ice->cb.on_ice_complete)(ice, ice->ice_status);
+ 	{
+            void (*on_ice_complete)(pj_ice_sess *ice, pj_status_t status);
+ 	    pj_status_t ice_status;
+ 
+ 	    /* Release mutex in case app destroy us in the callback */
+ 	    ice_status = ice->ice_status;
+ 	    on_ice_complete = ice->cb.on_ice_complete;
+ 	    has_mutex = PJ_FALSE;
+ 	    pj_mutex_unlock(ice->mutex);
+ 
+ 	    /* Notify app about ICE completion*/
+ 	    if (on_ice_complete)
+ 		(*on_ice_complete)(ice, ice_status);
+ 	}
 	break;
     case TIMER_START_NOMINATED_CHECK:
 	start_nominated_check(ice);
@@ -1146,7 +1159,8 @@
 	break;
     }
 
-    pj_mutex_unlock(ice->mutex);
+    if (has_mutex)
+	pj_mutex_unlock(ice->mutex);
 }
 
 /* This function is called when ICE processing completes */
