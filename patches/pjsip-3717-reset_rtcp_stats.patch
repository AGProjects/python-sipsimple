--- pjmedia/include/pjmedia/rtcp.h	2011-09-13 09:58:03.000000000 +0200
+++ pjmedia/include/pjmedia/rtcp.h	2011-09-14 16:30:24.000000000 +0200
@@ -274,6 +274,14 @@
 
 
 /**
+ * Initialize bidirectional RTCP statistics.
+ *
+ * @param stat		    The bidirectional RTCP statistics.
+ */
+PJ_DECL(void) pjmedia_rtcp_init_stat(pjmedia_rtcp_stat *stat);
+
+
+/**
  * Initialize RTCP session.
  *
  * @param session	    The session
--- pjmedia/include/pjmedia/stream.h	2011-09-13 09:58:03.000000000 +0200
+++ pjmedia/include/pjmedia/stream.h	2011-09-14 16:21:36.000000000 +0200
@@ -225,6 +225,16 @@
 PJ_DECL(pj_status_t) pjmedia_stream_get_stat( const pjmedia_stream *stream,
 					      pjmedia_rtcp_stat *stat);
 
+/**
+ * Reset the stream statistics.
+ *
+ * @param stream	The media stream.
+ *
+ * @return		PJ_SUCCESS on success.
+ */
+PJ_DECL(pj_status_t) pjmedia_stream_reset_stat(pjmedia_stream *stream);
+
+
 #if defined(PJMEDIA_HAS_RTCP_XR) && (PJMEDIA_HAS_RTCP_XR != 0)
 /**
  * Get the stream extended report statistics (RTCP XR).
--- pjmedia/src/pjmedia/rtcp.c	2011-09-13 09:58:04.000000000 +0200
+++ pjmedia/src/pjmedia/rtcp.c	2011-09-14 16:27:35.000000000 +0200
@@ -125,6 +125,29 @@
 }
 
 
+/*
+ * Initialize bidirectional RTCP statistics.
+ *
+ */
+PJ_DEF(void) pjmedia_rtcp_init_stat(pjmedia_rtcp_stat *stat)
+{
+    pj_time_val now;
+
+    pj_assert(stat);
+
+    pj_bzero(stat, sizeof(pjmedia_rtcp_stat));
+
+    pj_math_stat_init(&stat->rtt);
+    pj_math_stat_init(&stat->rx.loss_period);
+    pj_math_stat_init(&stat->rx.jitter);
+    pj_math_stat_init(&stat->tx.loss_period);
+    pj_math_stat_init(&stat->tx.jitter);
+
+    pj_gettimeofday(&now);
+    stat->start = now;
+}
+
+
 PJ_DEF(void) pjmedia_rtcp_init(pjmedia_rtcp_session *sess, 
 			       char *name,
 			       unsigned clock_rate,
--- pjmedia/src/pjmedia/stream.c	2011-09-13 09:58:04.000000000 +0200
+++ pjmedia/src/pjmedia/stream.c	2011-09-14 16:22:39.000000000 +0200
@@ -1953,6 +1953,20 @@
     return PJ_SUCCESS;
 }
 
+
+/*
+ * Reset the stream statistics in the middle of a stream session.
+ */
+PJ_DEF(pj_status_t) pjmedia_stream_reset_stat(pjmedia_stream *stream)
+{
+    PJ_ASSERT_RETURN(stream, PJ_EINVAL);
+
+    pjmedia_rtcp_init_stat(&stream->rtcp.stat);
+
+    return PJ_SUCCESS;
+}
+
+
 #if defined(PJMEDIA_HAS_RTCP_XR) && (PJMEDIA_HAS_RTCP_XR != 0)
 /*
  * Get stream extended statistics.
