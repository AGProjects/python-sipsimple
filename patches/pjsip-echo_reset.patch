--- pjmedia/include/pjmedia/sound_port.h	2008-12-23 18:27:53.000000000 +0100
+++ pjmedia/include/pjmedia/sound_port.h	2011-09-13 09:58:03.000000000 +0200
@@ -222,6 +222,16 @@
 
 
 /**
+ * Reset the EC state in the sound port.
+ *
+ * @param snd_port	    The sound device port.
+ *
+ * @return		    PJ_SUCCESS on success.
+ */
+PJ_DECL(pj_status_t) pjmedia_snd_port_reset_ec_state(pjmedia_snd_port *snd_port);
+
+
+/**
  * Connect a port to the sound device port. If the sound device port has a
  * sound recorder device, then this will start periodic function call to
  * the port's put_frame() function. If the sound device has a sound player
--- pjmedia/src/pjmedia/sound_port.c	2011-08-22 17:24:20.000000000 +0200
+++ pjmedia/src/pjmedia/sound_port.c	2011-09-13 09:58:04.000000000 +0200
@@ -152,7 +152,7 @@
     if (snd_port->ec_state) {
 	if (snd_port->ec_suspended) {
 	    snd_port->ec_suspended = PJ_FALSE;
-	    //pjmedia_echo_state_reset(snd_port->ec_state);
+	    pjmedia_echo_reset(snd_port->ec_state);
 	    PJ_LOG(4,(THIS_FILE, "EC activated"));
 	}
 	snd_port->ec_suspend_count = 0;
@@ -578,6 +578,18 @@
     return PJ_SUCCESS;
 }
 
+
+/* Reset EC state */
+PJ_DEF(pj_status_t) pjmedia_snd_port_reset_ec_state( pjmedia_snd_port *snd_port )
+{
+    PJ_ASSERT_RETURN(snd_port, PJ_EINVAL);
+    if (snd_port->ec_state) {
+	pjmedia_echo_reset(snd_port->ec_state);
+	PJ_LOG(4,(THIS_FILE, "EC reset"));
+    }
+    return PJ_SUCCESS;
+}
+
 
 
 /*

