Index: pjmedia/src/pjmedia/pasound.c
==================================================================
--- pjmedia/src/pjmedia/pasound.c	(revision 3114)
+++ pjmedia/src/pjmedia/pasound.c	(working copy)
@@ -17,6 +17,7 @@
  * along with this program; if not, write to the Free Software
  * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA 
  */
+#include <string.h>
 #include <pjmedia/sound.h>
 #include <pjmedia/errno.h>
 #include <pj/assert.h>
@@ -323,6 +324,8 @@
     if (input == NULL)
 	return paContinue;
 
+    ENTER_PA_CALL_REGION_RETURN(paAbort);
+
     /* Known cases of callback's thread:
      * - The thread may be changed in the middle of a session, e.g: in MacOS 
      *   it happens when plugging/unplugging headphone.
@@ -332,6 +335,7 @@
      */
     if (stream->rec_thread_initialized == 0 || !pj_thread_is_registered()) 
     {
+	memset(stream->rec_thread_desc, 0, sizeof(stream->rec_thread_desc));
 	status = pj_thread_register("pa_rec", stream->rec_thread_desc, 
 				    &stream->rec_thread);
 	stream->rec_thread_initialized = 1;
@@ -396,6 +400,8 @@
 	stream->rec_buf_count += frameCount * stream->channel_count;
     }
 
+    LEAVE_PA_CALL_REGION();
+
     if (status==0) 
 	return paContinue;
 
@@ -424,6 +430,8 @@
     if (output == NULL)
 	return paContinue;
 
+    ENTER_PA_CALL_REGION_RETURN(paAbort);
+
     /* Known cases of callback's thread:
      * - The thread may be changed in the middle of a session, e.g: in MacOS 
      *   it happens when plugging/unplugging headphone.
@@ -433,6 +441,7 @@
      */
     if (stream->play_thread_initialized == 0 || !pj_thread_is_registered()) 
     {
+	memset(stream->play_thread_desc, 0, sizeof(stream->play_thread_desc));
 	status = pj_thread_register("portaudio", stream->play_thread_desc,
 				    &stream->play_thread);
 	stream->play_thread_initialized = 1;
@@ -494,6 +503,8 @@
 	    nsamples_req = 0;
 	}
     }
+
+    LEAVE_PA_CALL_REGION();
     
     if (status==0) 
 	return paContinue;
